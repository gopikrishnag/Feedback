@model Feedback.Web.ViewModels.UserPostcode

@{
    var invalid = Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid;
}

<div class="govuk-width-container app-width-container--wide">

    <partial name="Buttons/backbutton" model="@Model.BackButton" />

    <form asp-controller="Feedback" asp-action="UserPostcode" method="post">
        <partial name="Errors/SummaryError" model="@Model" />
        <main class="govuk-main-wrapper app-main-class" id="main-content" role="main">

            <div class="govuk-form-group @(ViewData.ModelState.GetFieldValidationState("Postcode") == invalid ? "govuk-form-group--error" : "")">
                <h1 class="govuk-label-wrapper">
                    <label class="govuk-label govuk-label--xl" asp-for="Postcode">
                        Postcode
                    </label>
                </h1>
                @if (ViewData.ModelState.GetFieldValidationState("Postcode") == invalid)
                {
                    <span id="national-insurance-number-error" class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> <span asp-validation-for="Postcode"></span>
                    </span>
                }
                <input class="govuk-input govuk-input--width-10 govuk-!-width-three-quarters @(ViewData.ModelState.GetFieldValidationState("Postcode") == invalid ? "govuk-input--error" : "")" asp-for="Postcode" spellcheck="false">
            </div>

            <partial name="Buttons/continue" />

        </main>

    </form>

</div>